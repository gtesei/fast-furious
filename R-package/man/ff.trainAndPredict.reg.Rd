% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/fastRegression.R
\name{ff.trainAndPredict.reg}
\alias{ff.trainAndPredict.reg}
\title{Trains a specified model on the given train set and predicts on the given test set.}
\usage{
ff.trainAndPredict.reg(Ytrain, Xtrain, Xtest, model.label, controlObject,
  best.tuning = FALSE, verbose = FALSE,
  removePredictorsMakingIllConditionedSquareMatrix_forLinearModels = TRUE,
  xgb.metric.fun = RMSLE.xgb, xgb.maximize = FALSE,
  xgb.metric.label = "rmsle", xgb.foldList = NULL, xgb.eta = NULL, ...)
}
\arguments{
\item{Ytrain}{the output variable as numeric vector}

\item{Xtrain}{the encoded \code{data.frame} of train data. Must be a \code{data.frame} of \code{numeric}}

\item{Xtest}{the encoded \code{data.frame} of test data. Must be a \code{data.frame} of \code{numeric}}

\item{model.label}{a string specifying which model to use. Possible values are \code{'lm'}, \code{'bayesglm'},
\code{'glm'}, \code{'glmStepAIC'}, \code{'rlm'}, \code{'knn'}, \code{'pls'}, \code{'ridge'}, \code{'enet'},
\code{'svmRadial'}, \code{'treebag'}, \code{'gbm'}, \code{'rf'}, \code{'cubist'}, \code{'avNNet'},
\code{'xgbTreeGTJ'}, \code{'xgbTree'}}

\item{controlObject}{a list of values that define how this function acts. Must be a caret \code{trainControl} object
for all models except that for \code{'xgbTreeGTJ'} and \code{'xgbTree'}. In the latter case only if \code{best.tuning} is \code{TRUE}.}

\item{best.tuning}{\code{TRUE} to use more dense tuning grid or custom routine if available}

\item{verbose}{\code{TRUE} to enable verbose mode.}

\item{removePredictorsMakingIllConditionedSquareMatrix_forLinearModels}{\code{TRUE} for removing predictors making
ill-conditioned square matrices in case of fragile linear models, i.e. \code{c('rlm','pls','ridge','enet')}.}

\item{xgb.metric.fun}{custom function to optmize/minimize for \code{'xgbTreeGTJ'} and \code{'xgbTree'}.
In the latter case only if \code{best.tuning} is \code{TRUE}.}

\item{xgb.maximize}{\code{TRUE} to maximize the specified \code{xgb.metric.fun}. Only for \code{'xgbTreeGTJ'} and \code{'xgbTree'}.
In the latter case only if \code{best.tuning} is \code{TRUE}.}

\item{xgb.metric.label}{custom label of function to optmize/minimize for \code{'xgbTreeGTJ'} and \code{'xgbTree'}.
In the latter case only if \code{best.tuning} is \code{TRUE}.}

\item{xgb.foldList}{custom resampling folds list for \code{'xgbTreeGTJ'} and \code{'xgbTree'}.
In the latter case only if \code{best.tuning} is \code{TRUE}.}

\item{xgb.eta}{custom \code{eta} parameter for \code{'xgbTreeGTJ'} and \code{'xgbTree'}.
In the latter case only if \code{best.tuning} is \code{TRUE}.}

\item{...}{arguments passed to the regression routine.}
}
\value{
a list of test predictions, model and number of excecuting seconds.
}
\description{
Trains a specified model on the given train set and predicts on the given test set.
}
\examples{
## suppress warnings raised because of few obs
warn_def = getOption('warn')
options(warn=-1)

## data
Xtrain <- data.frame( a = rep(1:10 , each = 2), b = 20:1,
c = rep(as.Date(c("2007-06-22", "2004-02-13")),10) )
Xtest <- data.frame( a = rep(2:11 , each = 2), b = 1:20,
c = rep(as.Date(c("2007-03-01", "2004-05-23")),10) )
Ytrain = 1:20 + runif(nrow(Xtrain))

## encode datasets
l = ff.makeFeatureSet(Xtrain,Xtest,c("C","N","D"))
Xtrain = l$traindata
Xtest = l$testdata

## make a caret control object
controlObject <- trainControl(method = "repeatedcv", repeats = 1, number = 2)

tp = ff.trainAndPredict.reg(Ytrain=Ytrain ,
                          Xtrain=Xtrain ,
                          Xtest=Xtest ,
                          model.label = "cubist" ,
                          controlObject=controlObject)

pred_test = tp$pred
model = tp$model
elapsed.secs = tp$secs

## restore warnings
options(warn=warn_def)
}

